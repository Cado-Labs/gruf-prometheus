#!/usr/bin/env ruby
# frozen_string_literal: true

# Copyright (c) 2019-present, BigCommerce Pty. Ltd. All rights reserved
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
require 'rubygems'
require 'bundler'
Bundler.setup
require 'active_support/all'
require 'gruf'
$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
$LOAD_PATH.unshift File.expand_path('../pb', __FILE__)
require 'gruf/prometheus'
require 'thing_controller'

client = Gruf::Client.new(service: ::Rpc::ThingService, options: {
  hostname: '0.0.0.0:9001',
  timeout: 1,
})


200.times do
  50.times do
    threads = []
    50.times do
      threads << Thread.new do
        begin
          resp = client.call(:GetThing, id: 1, sleep: 4)
          puts resp.message.inspect
        rescue StandardError, GRPC::Core::CallError => e
          puts "ERROR: #{e.message}"
        end
      end
    end
    threads.each(&:join)
  end
  sleep 1
end
